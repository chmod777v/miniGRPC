services:
  adminer:
    image: adminer
    ports: 
      - 8070:8080
    depends_on:
      - postgres
    networks:
      - services-networks


  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=miniGRPC
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - :5432
    networks:
    - services-networks


  grpc-server:
    container_name: grpc_server
    build:
      context: .
      dockerfile: Dockerfile.gRPC_server
    volumes:
      - ./config/local_docker.yml:/app/local.yml
    ports: 
      - 8090:8090
    networks:
      - services-networks
    depends_on:
      - postgres


  http-server:
    container_name: http_server
    build:
      context: .
      dockerfile: Dockerfile.http_server
    volumes:
      - ./config/local_docker.yml:/app/local.yml
    ports: 
      - 8080:8080
      - 8081:8081
    networks:
      - services-networks
    depends_on:
      - grpc-server


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./logingConfigs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    networks:
      - services-networks


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./logingConfigs/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafanadata:/var/lib/grafana
    networks:
      - services-networks


networks:
  services-networks:
    driver: bridge

volumes:
  postgres_data:
  grafanadata:
  prometheusdata: